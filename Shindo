local Config = {
    WindowName = "V.G Hub",
	Color = Color3.fromRGB(255,128,64),
	Keybind = Enum.KeyCode.RightControl
}
repeat wait() until game:IsLoaded() wait()
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)
game:GetService("RunService").Stepped:connect(
    function()
        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", 1000)
    end
)

local OldNameCall
OldNameCall = hookmetamethod(game, "__newindex", function(A, B, ...)
    if not checkcaller()  and (B == "WalkSpeed" or B == "JumpPower") then
        return
    end
    return OldNameCall(A, B, ...)
end)
repeat wait() until game:GetService("Players").LocalPlayer.Character
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Main") wait(2)
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 50
game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50

game:GetService("UserInputService").MouseIconEnabled = true
game:GetService("UserInputService").MouseBehavior = Enum.MouseBehavior.Default
game:GetService("RunService").Stepped:connect(function()
        pcall(function()
                for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if v:IsA("BillboardGui") then
                        v:remove()
                    end
                end
            end
        )
        if game:GetService("Workspace"):FindFirstChild("CCoff") then
            game:GetService("Workspace").CCoff:Destroy()
        end
        if game:GetService("Workspace"):FindFirstChild("custo") then
            game:GetService("Workspace").custo:Destroy()
        end
        if game:GetService("Workspace"):FindFirstChild("custo") then
            game:GetService("Workspace").custo:Destroy()
        end
        if game:GetService("Workspace"):FindFirstChild("conquer") then
            game:GetService("Workspace").conquer:remove()
        end
        if game:GetService("Workspace").GLOBALTIME:FindFirstChild("narutoshadowclone") then
            game:GetService("Workspace").GLOBALTIME.narutoshadowclone:remove()
        end
    end
) 


local player = game.Players.LocalPlayer
local mission = game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory")
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/im-retarded-3"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))
local Tab1 = Window:CreateTab("")
local Tab2 = Window:CreateTab("UI Settings")

local Section1 = Tab1:CreateSection("")
local Section2 = Tab1:CreateSection("")
local SectionA = Tab1:CreateSection("")
local Section3 = Tab2:CreateSection("Menu")
local Section4 = Tab2:CreateSection("Background")

if game.PlaceId == 7534339269 then
local Toggle1 = Section1:CreateToggle("AutoFarm event", nil, function(State)

end) end 
if game.PlaceId ~= 4616652839 then
local Toggle1 = Section1:CreateToggle("AutoFarm Logs", nil, function(State)
getgenv().AutoFarm = State
game:GetService("RunService").Stepped:connect(
    function()
        if getgenv().AutoFarm then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)

while getgenv().AutoFarm do
    wait()
    pcall(
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
            game:GetService("Workspace").npc.logtraining.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
            game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", true)
            game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", false)
        end
    )
end

end)



--[[
local Toggle1 = Section1:CreateToggle("AutoFarm Candy", nil, function(State)
getgenv().AutoCandy = State
game:GetService("RunService").Stepped:connect(
    function()
        if getgenv().AutoCandy then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
while getgenv().AutoCandy do
    wait()
    pcall(
        function()
            repeat
                wait(0.5)
                for i, v in pairs(game:GetService("Workspace").missiongivers:GetDescendants()) do
                    if
                        v:FindFirstChild("Head") and v.Head:FindFirstChild("givemission") and v.Head.givemission.Enabled and
                            v.Head.givemission:FindFirstChild("color").Image == "rbxassetid://7852180920"
                     then
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                    v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3)
                                v:FindFirstChild("CLIENTTALK"):FireServer()
                                v:FindFirstChild("CLIENTTALK"):FireServer("accept")
                            end
                        )
                    end
                end
            until getgenv().AutoCandy == false
        end
    )
end
end)]]--

local Toggle1 = Section1:CreateToggle("Event Bosses", nil, function(State)
getgenv().DD = State

game:GetService("RunService").Stepped:connect(
    function()
        if getgenv().DD then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
while wait() and getgenv().DD do
    for i, v in pairs(game:GetService("Workspace").npc:GetChildren()) do
        if v.Name == "npc1" then
            repeat
                wait()
                pcall(
                    function()
                        game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                        v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3)
                        game.Players.LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                        game.Players.LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                        end
                )
            until v.Humanoid.Health == 0 or not v or not getgenv().DD
        end
    end
end
end)

local Toggle1 = Section1:CreateToggle("AutoFarm Mobs", nil, function(State)
getgenv().AutoMobs = State
game:GetService("RunService").Stepped:connect(
    function()
        if getgenv().AutoMobs then pcall(function()
            j = string.split(mission.bg.name.Text, "(s)")[1]

            game.Players.LocalPlayer.PlayerGui:WaitForChild("Main"):WaitForChild("ingame"):WaitForChild("Missionstory").bg.name.Text =
                string.gsub(j, tostring((s)), "")

            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
            end)
        end
    end
)
while getgenv().AutoMobs do
    wait()
    pcall(
        function()
            repeat
                wait()
                for i, v in pairs(game:GetService("Workspace").missiongivers:GetChildren()) do
                    if
                        v:FindFirstChild("Head") and v.Head:FindFirstChild("givemission") and v.Head.givemission.Enabled and
                            v.Head.givemission:FindFirstChild("color").Image ==
                                "http://www.roblox.com/asset/?id=5459241648"
                     then
                        if mission.Visible == false then 
                            pcall(
                                function()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                                        wait(0.3)
                                    v:FindFirstChild("CLIENTTALK"):FireServer()
                                    v:FindFirstChild("CLIENTTALK"):FireServer("accept") wait(0.5)
                                end
                            )
                        end
                    end
                end
            until getgenv().AutoMobs == false or mission.Visible == true
            repeat
                wait()
                if mission.Visible == true then
                    for i, v in pairs(game:GetService("Workspace").npc:GetChildren()) do
                        if v:FindFirstChild("npctype") then
                          print("Hi")
                        end
                        if 
                            v.ClassName == "Model" and v:FindFirstChild("npctype") and
                                string.find(mission.bg.name.Text, v.Head.mob.fram.name.info.Text) and
                                v:FindFirstChild("HumanoidRootPart") and
                                v:FindFirstChild("Humanoid") and
                                v.Head.CFrame.Y > -1000
                         then
                            pcall(
                                function() wait(0.2)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                                    if v:FindFirstChild("antiexploit") then
                                        v.antiexploit:remove()
                                    end
                                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                                    if isnetworkowner(v.HumanoidRootPart) and v.Humanoid.Health < v.Humanoid.MaxHealth then
                                    v.Humanoid.Health = 0
                                    end 
                                end
                            )
                        end
                    end
                end
               
            until getgenv().AutoMobs == false or mission.Visible == false and v.Humanoid.Health == 0 and v
        end
    )
end

end)

local Toggle1 = Section1:CreateToggle("AutoFarm Boss", nil, function(State)
getgenv().KO = State
game:GetService("RunService").Stepped:connect(
    function()
        if getgenv().KO then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)

while getgenv().KO do
    pcall(
        function()
            wait()
            repeat
                wait()
                for i, v in pairs(game:GetService("Workspace").bossdropmission.missions:GetChildren()) do
                    for i, v in pairs(v:GetChildren()) do
                        if v:IsA("Model") and v:FindFirstChild("Head") then
                            if mission.Visible == false then
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                    v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                                wait(0.3)
                                v:FindFirstChild("CLIENTTALK"):FireServer()
                                v:FindFirstChild("CLIENTTALK"):FireServer("accept")
                                wait(0.5)
                            end
                        end
                    end
                end
            until getgenv().KO == false or mission.Visible == true
            repeat
                wait()
                for i, v in pairs(game:GetService("Workspace").npc:GetChildren()) do
                    if
                        v.ClassName == "Model" and v:FindFirstChild("npctype") and
                            string.find(mission.bg.name.Text, v.Head.mob.fram.name.info.Text)
                     then
                        if mission.Visible == true then 
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                            if v:FindFirstChild("antiexploit") then
                            v.antiexploit:remove()
                            end
                            game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                            game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                            if v.Humanoid.Health < v.Humanoid.MaxHealth and isnetworkowner(v.HumanoidRootPart) then
                                v.Humanoid.Health = 0
                            end
                        end
                    end
                end
            until getgenv().KO == false or mission.Visible == false and v.Humanoid.Health == 0 and v
        end
    )
end


end)
if setclipboard then
local Toggle1 = Section1:CreateToggle("Vip Servers", nil, function(State)
setclipboard("-E0BJK 0Skr9C 1Isuub 2tgOb8 2vy3Dn 7rTU-A 7v09lz 8CGAZH BcBuAN CI98Au Do2o8A JFDOST KFXSrq QeR2eN Qratoy RRu4E7 Rjb0rQ SbFkZm TVDDoU WY4chE _5_oXy cJ7LIe cdv9R4 dBNARC dG5Y-3 fLe-Az hnI8qv nWv2xH puv68h sCCXqk tkqyBR v5-9u3 w1wF1v zfU90r")
end)
end
local Toggle1 = Section1:CreateToggle("AutoRank", nil, function(State)
getgenv().Rank = State
while wait() and getgenv().Rank do
    if game.Players.LocalPlayer.statz.lvl:FindFirstChild("lvl").Value >= 500 then
        if
            game.Players.LocalPlayer.statz.prestige.maxlvlpres.Value >= 1 or
                game.Players.LocalPlayer.statz.prestige.maxlvlpres.Value == 0 and
                    game.Players.LocalPlayer.statz.prestige.rank.Value == "Z" and
                    game.Players.LocalPlayer.statz.prestige.number.Value == "3"
         then
            repeat
                wait(0.5)
                game.Players.LocalPlayer.startevent:FireServer("maxlvlpres")
            until game.Players.LocalPlayer.statz.lvl:FindFirstChild("lvl").Value == 1 or not getgenv().Rank
        else
            repeat
                wait(0.5)
                game.Players.LocalPlayer.startevent:FireServer("rankup")
            until game.Players.LocalPlayer.statz.lvl:FindFirstChild("lvl").Value == 1 or not getgenv().Rank
        end
    end
end
end)

local Toggle1 = Section1:CreateToggle("jinfarm", nil, function(State)
getgenv().Jin = State

game:GetService("RunService").Stepped:connect(
    function()
        if getgenv().Jin then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
while wait() and getgenv().Jin do
    for i, v in pairs(game:GetService("Workspace").npc:GetChildren()) do
        if v.Name == "npc1" then
            repeat
                wait()
                pcall(
                    function()
                        game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                            v.HumanoidRootPart.CFrame * CFrame.new(0, -7, 0)
                            game.Players.LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                            game.Players.LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                         if isnetworkowner(v.HumanoidRootPart) and v.Humanoid.Health < v.Humanoid.MaxHealth then
                            v.Humanoid.Health = 0
                        end 
                    end
                )
            until v.Humanoid.Health == 0 or not v or not getgenv().Jin
        end
    end
end
end)

local Toggle1 = Section1:CreateToggle("AutoWar", nil, function(State)
getgenv().War = State

game:GetService("RunService").Stepped:connect(
    function()
        if getgenv().War then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)

while getgenv().War do
    wait()
    pcall(
        function()
            for i, v in pairs(workspace.npc:GetChildren()) do
                if
                    v.ClassName == "Model" and v:FindFirstChild("npc") and string.find(v.Name, "npc") and
                        v:FindFirstChild("HumanoidRootPart") and
                        v:FindFirstChild("Humanoid") and
                        v.Head.CFrame.Y > -1000 and
                        not v:FindFirstChild("megaboss")
                 then
                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                    if isnetworkowner(v.HumanoidRootPart) and v.Humanoid.Health < v.Humanoid.MaxHealth then
                        v.Humanoid.Health = 0
                    end
                elseif
                    v.ClassName == "Model" and v:FindFirstChild("npc") and string.find(v.Name, "npc") and
                        v:FindFirstChild("HumanoidRootPart") and
                        v:FindFirstChild("Humanoid") and
                        v.Head.CFrame.Y > -1000 and
                        v:FindFirstChild("megaboss")
                 then
                    wait(6)
                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", true)
                    game:GetService("Players").LocalPlayer.Character.combat.update:FireServer("mouse1", false)
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        v.HumanoidRootPart.CFrame * CFrame.new(0, -5, 0)
                    if isnetworkowner(v.HumanoidRootPart) and v.Humanoid.Health < v.Humanoid.MaxHealth then
                        v.Humanoid.Health = 0
                    end
                end
            end
        end
    )
end

end)

local Toggle1 = Section1:CreateToggle("ScrollFarm", nil, function(State)
getgenv().Scroll = State
while getgenv().Scroll do
    wait()
    pcall(
        function()
            for i, v in pairs(game.workspace.GLOBALTIME:GetChildren()) do
                if
                    v.ClassName == "Model" and v:FindFirstChild("sh") and v.sh.Position.Y > -1000 and
                        v.sh.Position.Y < 2000
                 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.sh.CFrame
                    fireclickdetector(v.sh.ClickDetector)
                end
            end
            for i, v in pairs(game.workspace:GetChildren()) do
                if
                    v.ClassName == "Model" and v:FindFirstChild("sh") and v.sh.Position.Y > -1000 and
                        v.sh.Position.Y < 2000
                 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.sh.CFrame
                    fireclickdetector(v.sh.ClickDetector)
                end
            end
        end
    )
end
end)

local Toggle1 = Section1:CreateToggle("Auto Upgrade Health", nil, function(State)
woo3 = State
while woo3 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("addstat", "health", 5)
end
end)

local Toggle1 = Section1:CreateToggle("Auto Upgrade Ninjutsu", nil, function(State)
woo2 = State
while woo2 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("addstat", "ninjutsu", 5)
end
end)


local Toggle1 = Section1:CreateToggle("Auto Upgrade Taijutsu", nil, function(State)
woo1 = State
while woo1 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("addstat", "taijutsu", 5)
end
end)

local Toggle1 = Section1:CreateToggle("Auto Upgrade Chakra", nil, function(State)
woo = State
while woo do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("addstat", "chakra", 5)
end
end)

end -- where it stops

if game.PlaceId == 4616652839 then

local Toggle1 = Section1:CreateToggle("Auto Element Slot 1", nil, function(State)
karma = State
while karma do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "element1")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "Element1",
            Text = "Current Element1 is " .. game:GetService("Players").LocalPlayer.statz.main.element1.Value
        }
    )
    wait(5)
end
end)

local Toggle1 = Section1:CreateToggle("Auto Element Slot 2", nil, function(State)
karma1 = State
while karma1 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "element2")

    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "Element2",
            Text = "Current Element2 is " .. game:GetService("Players").LocalPlayer.statz.main.element2.Value
        }
    )
    wait(5)
end
end)

local Toggle1 = Section1:CreateToggle("Auto Element Slot 3", nil, function(State)
karma2 = State
while karma2 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "element3")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "Element3",
            Text = "Current Element3 is " .. game:GetService("Players").LocalPlayer.statz.main.element3.Value
        }
    )
    wait(5)
end
end)

local Toggle1 = Section1:CreateToggle("Auto Element Slot 4", nil, function(State)
karma4 = State
while karma4 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "element4")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "Element4",
            Text = "Current Element4 is " .. game:GetService("Players").LocalPlayer.statz.main.element4.Value
        }
    )
    wait(5)
end
end)


local Toggle1 = Section1:CreateToggle("Auto BloodLine Slot 1", nil, function(State)
blood = State
while blood do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "kg1")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "BloodLine1",
            Text = "Current BloodLine1 is " .. game:GetService("Players").LocalPlayer.statz.main.kg1.Value
        }
    )
    wait(5)
end
end)

local Toggle1 = Section1:CreateToggle("Auto BloodLine Slot 2", nil, function(State)
blood1 = State
while blood1 do
    wait()

    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "kg2")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "BloodLine2",
            Text = "Current BloodLine2 is " .. game:GetService("Players").LocalPlayer.statz.main.kg2.Value
        }
    )
    wait(5)
end
end)

local Toggle1 = Section1:CreateToggle("Auto BloodLine Slot 3", nil, function(State)
blood2 = State
while blood2 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "kg3")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "BloodLine3",
            Text = "Current BloodLine3 is " .. game:GetService("Players").LocalPlayer.statz.main.kg3.Value
        }
    )
    wait(5)
end
end)

local Toggle1 = Section1:CreateToggle("Auto BloodLine Slot 4", nil, function(State)
blood3 = State
while blood3 do
    wait()
    game:GetService("Players").LocalPlayer.startevent:FireServer("spin", "kg4")
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "BloodLine4",
            Text = "Current BloodLine4 is " .. game:GetService("Players").LocalPlayer.statz.main.kg4.Value
        }
    )
    wait(5)
end
end)
end -- where it stops

local Toggle1 = SectionA:CreateToggle("AutoKeyPress R", nil, function(State)
getgenv().R = State
while getgenv().R do
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"R",false,uwu)
end 
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress T", nil, function(State)
getgenv().T = State
while getgenv().T do
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"T",false,uwu)
end
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress Y", nil, function(State)
getgenv().Y = State
while getgenv().Y do
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"Y",false,uwu)
end 
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress F", nil, function(State)
getgenv().F = State
while getgenv().F do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"F",false,uwu)
end
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress G", nil, function(State)
getgenv().G = State
while getgenv().G do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"G",false,uwu)
end
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress H", nil, function(State)
getgenv().H = State
while getgenv().H do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"H",false,uwu)
end
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress Q", nil, function(State)
getgenv().Q = State
while getgenv().Q do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"Q",false,uwu)
end 
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress E", nil, function(State)
getgenv().E = State
while getgenv().E do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"E",false,uwu)
end 
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress V", nil, function(State)
getgenv().V = State
while getgenv().V do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"V",false,uwu)
end 
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress B", nil, function(State)
getgenv().B = State
while getgenv().B do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"B",false,uwu)
end 
end)

local Toggle1 = SectionA:CreateToggle("AutoKeyPress N", nil, function(State)
getgenv().N = State
while getgenv().N do 
    wait()
game:GetService('VirtualInputManager'):SendKeyEvent(true,"N",false,uwu)
end 
end)
local TextBox1 = Section2:CreateTextBox("WalkSpeed", "Only numbers", true, function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)
local TextBox1 = Section2:CreateTextBox("JumpPower", "Only numbers", true, function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end)
local Toggle1 = Section2:CreateToggle("Infinite Jump", nil, function(State)
Infinite = State
game:GetService("UserInputService").JumpRequest:connect(function()
	if Infinite then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end) end)


local Toggle1 = Section2:CreateToggle("G Noclip", nil, function(State)
sex = State
noclip = false
game:GetService("RunService").Stepped:connect(
    function()
        if noclip then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end
)

mouse = game.Players.LocalPlayer:GetMouse()
game.Players.LocalPlayer:GetMouse().KeyDown:connect(
    function(v)
        if v == "g" then
            if sex then
                noclip = not noclip
                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
            end
        end
    end
)
end)

local Toggle1 = Section2:CreateToggle("J Fly", nil, function(State)
sex2 = State
local Max = 0
local Players = game.Players
local LP = Players.LocalPlayer
local Mouse = LP:GetMouse()
Mouse.KeyDown:connect(function(k)
if k:lower() == 'j' then
Max = Max + 1
getgenv().Fly = false
if sex2 then
local T = LP.Character.Torso
local S = {
F = 0,
B = 0,
L = 0,
R = 0
}
local S2 = {
F = 0,
B = 0,
L = 0,
R = 0
}
local SPEED = 5
local function FLY()
getgenv().Fly = true
local BodyGyro = Instance.new('BodyGyro', T)
local BodyVelocity = Instance.new('BodyVelocity', T)
BodyGyro.P = 9e4
BodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
BodyGyro.cframe = T.CFrame
BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
BodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)
spawn(function()
repeat
wait()
LP.Character.Humanoid.PlatformStand = false
if S.L + S.R ~= 0 or S.F + S.B ~= 0 then
SPEED = 200
elseif not (S.L + S.R ~= 0 or S.F + S.B ~= 0) and SPEED ~= 0 then
SPEED = 0
end
if (S.L + S.R) ~= 0 or (S.F + S.B) ~= 0 then
BodyVelocity.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (S.F + S.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(S.L + S.R, (S.F + S.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
S2 = {
F = S.F,
B = S.B,
L = S.L,
R = S.R
}
elseif (S.L + S.R) == 0 and (S.F + S.B) == 0 and SPEED ~= 0 then
BodyVelocity.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (S2.F + S2.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(S2.L + S2.R, (S2.F + S2.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
else
BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
end
BodyGyro.cframe = game.Workspace.CurrentCamera.CoordinateFrame
until not getgenv().Fly
S = {
F = 0,
B = 0,
L = 0,
R = 0
}
S2 = {
F = 0,
B = 0,
L = 0,
R = 0
}
SPEED = 0
BodyGyro:destroy()
BodyVelocity:destroy()
LP.Character.Humanoid.PlatformStand = false
end)
end
Mouse.KeyDown:connect(function(k)
if k:lower() == 'w' then
S.F = 1
elseif k:lower() == 's' then
S.B = -1
elseif k:lower() == 'a' then
S.L = -1
elseif k:lower() == 'd' then
S.R = 1
end
end)
Mouse.KeyUp:connect(function(k)
if k:lower() == 'w' then
S.F = 0
elseif k:lower() == 's' then
S.B = 0
elseif k:lower() == 'a' then
S.L = 0
elseif k:lower() == 'd' then
S.R = 0
end
end)
FLY()
if Max == 2 then
getgenv().Fly = false
Max = 0
end
end
end
end)
end)
local Button1 = Section2:CreateButton("Anti Lag", function()
for _, v in pairs(game:GetService("Workspace"):GetDescendants()) do
    if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then --- i stole this from the actual game LOL >-<
        v.Material = Enum.Material.SmoothPlastic
        if v:IsA("Texture") then
            v:Destroy()
        end
    end
end
end)

local Button1 = Section2:CreateButton("Teleport to RandomPlayer", function()
local randomPlayer = game.Players:GetPlayers()[math.random(1, #game.Players:GetPlayers())]

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
    CFrame.new(
    Vector3.new(
        randomPlayer.Character.Head.Position.X,
        randomPlayer.Character.Head.Position.Y,
        randomPlayer.Character.Head.Position.Z
    )
)
end)
local Button1 = Section2:CreateButton("Lag Switch F3", function()
local ass = false
local back = settings()

game:service "UserInputService".InputEnded:connect(
    function(i)
        if i.KeyCode == Enum.KeyCode.F3 then
            ass = not ass
            back.Network.IncomingReplicationLag = ass and 10 or 0
        end
    end
)
end) 
local Button1 = Section2:CreateButton("ServerHop", function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport() 
end)
local Button1 = Section2:CreateButton("Rejoin", function()
game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer) end)

local Toggle3 = Section3:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)
Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)
Toggle3:SetState(true)
Section3:CreateLabel("Credits DekuDimz#7960")
Section3:CreateLabel("Credits AlexR32#3232 Ui")
Section3:CreateLabel("Credits The3Bakers")
local Colorpicker3 = Section3:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)
-- credits to jan for patterns
local Dropdown3 = Section4:CreateDropdown("Image")
local Option7 = Dropdown3:AddOption("Default", function(String)
	Window:SetBackground("2151741365")
end)
local Option8 = Dropdown3:AddOption("Hearts", function(String)
	Window:SetBackground("6073763717")
end)
local Option9 = Dropdown3:AddOption("Abstract", function(String)
	Window:SetBackground("6073743871")
end)
local Option10 = Dropdown3:AddOption("Hexagon", function(String)
	Window:SetBackground("6073628839")
end)
local Option11 = Dropdown3:AddOption("Circles", function(String)
	Window:SetBackground("6071579801")
end)
local Option12 = Dropdown3:AddOption("Lace With Flowers", function(String)
	Window:SetBackground("6071575925")
end)
local Option13 = Dropdown3:AddOption("Floral", function(String)
	Window:SetBackground("5553946656")
end)
Option7:SetOption()

local Colorpicker4 = Section4:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(1,1,1))

local Slider3 = Section4:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = Section4:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(0.5)

