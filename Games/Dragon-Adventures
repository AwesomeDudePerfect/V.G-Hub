repeat wait() until game:IsLoaded()
local Table = {3475397644, 5391312853, 3752680052, 4174118306, 3475419198, 3475422608, 4601778915, 4869039553, 5777228223, 3623549100, 3737848045, 3487210751, 4728805070, 5777228223}
if not table.find(Table, game.PlaceId) then return end
repeat
    wait()
until game:IsLoaded()
wait()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")
local VirtualUser = game:GetService("VirtualUser")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local StarterGui = game:GetService("StarterGui")

local Player = Players.LocalPlayer
local wait = task.wait 
local spawn = task.spawn

Player.Idled:connect(
    function()
        VirtualUser:ClickButton2(Vector2.new())
    end
)
repeat
    wait()
until Player.Character


local Settings = {}

local GetConnections = function(A, B)
    for i,v in pairs(getconnections(A[tostring(B)])) do
        v:Fire()
    end 
end 

Player.PlayerGui.NodeGui.BoostFrame.ChildAdded:Connect(
    function(v)
        if v:IsA("Frame") and v:FindFirstChild("ClickButton") then
            wait(0.5)
            GetConnections(v.ClickShadowButton,"MouseButton1Down") 
        end
    end
)


if Player.PlayerGui:FindFirstChild("IntroFrame") then
    local Eh = Player.PlayerGui.IntroGui.IntroFrame.PlayButton
    local VirtualUser = VirtualUser
    Eh.Size = UDim2.new(9e9, 9e9, 9e9, 9e9)
    wait(1)
    VirtualUser:ClickButton1(Vector2.new(9e9, 9e9))
    wait(1)
    Eh.Size = UDim2.new(0, 0, 0, 0)
end
local D = {"üïπÔ∏èPlayer", "Guest"}

local function GetDragons()
    local Target
    for i, v in ipairs(Player.Character.Dragons:GetChildren()) do
        if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
            Target = v
        end
    end
    return Target
end
if game.PlaceId ~= 5777228223 then
    pcall(
        function()
            ReplicatedStorage.Remotes.SpinWheelRemote:InvokeServer()
            ReplicatedStorage.Remotes.ClaimWheelRemote:FireServer()

            StarterGui:SetCoreGuiEnabled(1, true)
            StarterGui:SetCoreGuiEnabled(2, true)
            StarterGui:SetCoreGuiEnabled(3, true)
        end
    )
end
Worlds = {}
local Poop = require(ReplicatedStorage.Storage.Worlds.Worlds)
for i, v in pairs(Poop) do
    table.insert(Worlds, v.Name .. " " .. v.GameId)
end

function Invis()
    local Clone = Player.Character.LowerTorso.Root:Clone()
    Player.Character.LowerTorso.Root:remove()
    Clone.Parent = Player.Character.LowerTorso
end

getgenv().Text = Drawing.new("Text")
Text.Color = Color3.new(0, 1, 1)
Text.Font = 1
Text.Outline = true
Text.OutlineColor = Color3.new(0, 0, 0)
Text.Position = Vector2.new(30, Workspace.CurrentCamera.ViewportSize.Y - 100)
Text.Size = 25
Text.Text = ""
Text.Visible = true

Workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(
    function()
        Text.Position = Vector2.new(20, Workspace.CurrentCamera.ViewportSize.Y - 100)
    end
)

spawn(
    function()
        while wait() do
            Text.Text = Player.Settings.CurrentFish.Value
        end
    end
)

function fuckyou()
    ServerHop()
end

for i, v in pairs(Players:GetPlayers()) do
    if not table.find(D, tostring(v:GetRoleInGroup(2919215))) then
        fuckyou()
    end
end
Players.PlayerAdded:Connect(
    function(v)
        if not table.find(D, tostring(v:GetRoleInGroup(2919215))) then
            fuckyou()
        end
    end
)
local OldNameCall = nil
OldNameCall = hookmetamethod(game, "__newindex", function(...)
    local Self, Key = ...
    local WalkSpeed = Player.Character:FindFirstChildWhichIsA("Humanoid", true).WalkSpeed
    local JumpPower = Player.Character:FindFirstChildWhichIsA("Humanoid", true).JumpPower
    if not checkcaller() then
        if Self == WalkSpeed then
            return WalkSpeed or 16 
        elseif Self == JumpPower then
            return JumpPower or 50
        end
    end
    return OldNameCall(...)
end)

local RF, RE
for i,v in next, getgc() do
    if type(v) == "function" and islclosure(v) then
        if debug.getinfo(v).name == "GetRemoteFunction" then
            RF = v 
        elseif debug.getinfo(v).name == "GetRemoteEvent" then
            RE = v
        end
    end
end

local Healing = {}
for i,v in next, ReplicatedStorage.Storage.Items.Items.Healing:GetChildren() do
    if v:IsA("ModuleScript") then
        local A = require(v)
        for i,v in next, A do
            table.insert(Healing, i)
        end
    end
end

local foods = {}
for i, v in pairs(ReplicatedStorage.Storage.Items.Items.Food:GetChildren()) do
    if v.ClassName == "ModuleScript" then
        g = require(v)
        for i, v in pairs(g) do
            table.insert(foods, i)
        end
    end
end
local list = {}
for i, v in pairs(ReplicatedStorage.Storage.Items.Items.Food:GetChildren()) do
    if v.ClassName == "ModuleScript" then
        f = require(v)
        for i, v in pairs(f) do
            table.insert(list, i)
        end
    end
end
local Dragons = {}
for i, v in pairs(Player.Data.Dragons:GetChildren()) do
    if v:FindFirstChild("Age") then
        table.insert(Dragons, v.Value)
    end
end
local ss1 = {}
for i, v in pairs(ReplicatedStorage.Storage.Items.Items.Eggs:GetChildren()) do
          if v.ClassName == "ModuleScript" then
        f = require(v)
        for i,v in pairs(f) do
        table.insert(ss1, i)
        end
    end
end

local Noclip = function()
    if Player.Character and Player.Character:FindFirstChildWhichIsA("Humanoid") then
        for i,v in next, Player.Character:GetChildren() do
            if v:IsA("BasePart") then
                v.CanCollide = false
                v.Velocity = Vector3.new(0,0,0)
            end
        end
    end 
end 
local deku1 = {"SolsticeFlares", "SolsticeBoxes"}
local deku = {"Food", "Magic", "Resources"}


local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'
local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local Window = Library:CreateWindow({
    Title = MarketplaceService:GetProductInfo(game.PlaceId).Name,
    Center = true, 
    AutoShow = true,
})

local Tabs = {
    Main = Window:AddTab('Main'), 
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

local LeftGroupBox = Tabs.Main:AddLeftGroupbox('AutoFarms')
local LeftGroupBox2 = Tabs.Main:AddRightGroupbox('Quick Misc')


local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')
if game.PlaceId == 3475397644 then

for i, v in pairs(Workspace.Interactions:GetDescendants()) do
    if v:IsA("TextLabel") and v.Name:match("Player")  then
        if v.Text == Player.PlayerGui.WorkspaceGui[Player.Name .. "_DisplayGui"].ContainerFrame.NameLabel.Text then
             Player.Character.HumanoidRootPart.CFrame = v.Parent.Parent.Parent.TeleportPart.CFrame
        end
    end
end


LeftGroupBox:AddButton('Clear Base', function() Workspace.Interactions.Plots.Plots[Player.Name.."_Plot"].DeleteAllRemote:FireServer() end)

LeftGroupBox:AddButton('Go To Base', function()
    for i, v in pairs(Workspace.Interactions:GetDescendants()) do
        if v:IsA("TextLabel") and v.Name:match("Player")  then
            if  v.Text == Player.PlayerGui.WorkspaceGui[Player.Name .. "_DisplayGui"].ContainerFrame.NameLabel.Text then
                firetouchinterest(Player.Character.HumanoidRootPart, v.Parent.Parent.Parent.TeleportPart, 0)
            end
        end
    end
end)
LeftGroupBox:AddButton('Sell All Food', function()
    for i, v in pairs(Player.Data.Resources:GetChildren()) do
        if table.find(foods,v.Name) and v.Value ~= 0 then wait(0.5)
            RE("SellItemRemote"):FireServer({["Amount"] = v.Value, ["ItemName"] = v.Name})
        end
    end
end)
LeftGroupBox:AddToggle('Alchemy', {Text = 'Auto Alchemy', Default = false,Tooltip = ''})
Toggles.Alchemy:OnChanged(function(State)
Alchemy = Toggles.Alchemy.Value
    spawn(function()
        while wait() and Alchemy do
            pcall(function()
                for i, v in pairs(Player.Data.Resources:GetChildren()) do
                    if v.Name == AlchemyFoods and v.Value ~= 0 then wait(5)
                        RF("RecycleResourceRemote"):InvokeServer({[AlchemyFoods] = 1})
                    end
                end
            end)
        end
    end)
end)


LeftGroupBox:AddDropdown('AlchemyFoods', {Values = foods, Default = 1, Multi = false, Text = 'Alchemy Foods', Tooltip = ''})
Options.AlchemyFoods:OnChanged(function(String)
    AlchemyFoods = Options.AlchemyFoods.Value
end)
end
LeftGroupBox:AddToggle('Collect', {Text = 'Auto Collect', Default = false,Tooltip = ''})
Toggles.Collect:OnChanged(function(State)
AutoCollect = Toggles.Collect.Value
    RunService.Stepped:connect(function()
        if AutoCollect then
            pcall(function()
                Noclip()
            end)
        end
    end)
    spawn(function()
        while AutoCollect do wait()
            pcall(function()
                for i, v in pairs(Workspace.Interactions.Nodes.Harvest[CollectionItem].ActiveNodes:GetChildren()) do
                    if v:IsA("Model") and v:FindFirstChildWhichIsA("BasePart") and AutoCollect then
                        Player.Character.HumanoidRootPart.CFrame =
                            v:FindFirstChildWhichIsA("BasePart").CFrame * CFrame.new(40, 5, 0)
                        wait(1)
                        repeat wait()
                        Tween(Player.Character:FindFirstChild("HumanoidRootPart"), v:FindFirstChildWhichIsA("BasePart").CFrame, 16)
                        wait(3)
                        VirtualInputManager:SendKeyEvent(true, "E", false, game)
                        until v == nil or AutoCollect == false or v:FindFirstChild("Harvested").Value == true and wait(6)
                    end
                end
            end)
        end
    end)
end)

LeftGroupBox:AddDropdown('Drops', {Values = deku, Default = 1, Multi = false, Text = 'Collectables', Tooltip = ''})
Options.Drops:OnChanged(function(String)
    CollectionItem = Options.Drops.Value
end)
LeftGroupBox:AddToggle('Egg3', {Text = 'Auto Egg', Default = false,Tooltip = ''})
Toggles.Egg3:OnChanged(function(State)
AutoEgg = Toggles.Egg3.Value
    RunService.Stepped:connect(function()
        if AutoEgg then
            pcall(function()
                Noclip()
            end)
        end
    end)
    spawn(function()
        while AutoEgg do wait()
            pcall(function()
                for i, v in pairs(Workspace.Interactions.Nodes.Harvest.Eggs.ActiveNodes:GetChildren()) do
                    if v:IsA("Model") and v:FindFirstChildWhichIsA("BasePart") then
                        Player.Character.HumanoidRootPart.CFrame = v:FindFirstChildWhichIsA("BasePart").CFrame * CFrame.new(40, -3, 0)
                        wait(1)
                        repeat wait()
                        Tween(Player.Character:FindFirstChild("HumanoidRootPart"), v:FindFirstChildWhichIsA("BasePart").CFrame, 16)
                        wait(3)
                        if AutoEgg == false then
                            break
                        end
                        VirtualInputManager:SendKeyEvent(true, "E", false, game)
                        until v == nil or AutoEgg == false or v.Harvested.Value == true and wait(6)
                    end
                end
            end)
        end
    end)
end)
LeftGroupBox:AddToggle('Fish', {Text = 'Auto Fish', Default = false,Tooltip = ''})
Toggles.Fish:OnChanged(function(State)
AutoFish = Toggles.Fish.Value
    spawn(function()
        while AutoFish do wait()
            pcall(function()
                local Fish = require(ReplicatedStorage["_replicationFolder"].FishingClient)
                local StartCasting = Fish.StartCasting
                local Click = Fish.Click
                StartCasting(Fish, StartCasting)
                if Fish.Snagged == true then
                    Fish.ReelSignal:Fire()
                    if Player.PlayerGui.FishingGui.ContainerFrame.ReelingFrame.BarLabel.InnerLabel.PointerLabel.Position.X.Scale <= Player.PlayerGui.FishingGui.ContainerFrame.ReelingFrame.BarLabel.InnerLabel.SafeBarLabel.Position.X.Scale + .02 then
                        Click(Fish, Fish.Click)
                    end
                end
            end)
        end
    end)
end)
LeftGroupBox:AddButton('Equip Dragon', function() 
    for i,v in pairs(Player.Data.Dragons:GetDescendants()) do
        if  v.ClassName == 'StringValue' and  v.Value == DragonW and v:FindFirstChild("Stats") then 
            RF("EquipDragonRemote"):InvokeServer(v.Name)
            break
        end     
    end 
end)
LeftGroupBox:AddDropdown('f', {Values = Dragons, Default = 1, Multi = false, Text = 'Dragons To Equip', Tooltip = ''})
Options.f:OnChanged(function(String)
    DragonW = Options.f.Value
end)
LeftGroupBox:AddButton('Remove Dragons', function() 
    for i, v in pairs(Player.Character.Dragons:GetDescendants()) do
        if v:IsA("Model") and v:FindFirstChild("ID") then
            RF("UnequipDragonRemote"):InvokeServer(v.Name)
        end
    end
end)
LeftGroupBox:AddToggle('Fd', {Text = 'Auto Feed', Default = false,Tooltip = ''})
Toggles.Fd:OnChanged(function(State)
AutoFeed = Toggles.Fd.Value
    spawn(function()
        while AutoFeed do wait()
            if AutoFeed then
                pcall(function()
                    for i, v in pairs(Player.Character.Dragons:GetChildren()) do
                        if v.ClassName == "Model" and v:FindFirstChild("ID") then wait(5)
                            RF("FeedDragonRemote"):InvokeServer(v.Name, {["Amount"] = 1, ["ItemName"] = Num})
                        end
                    end
                end)
            end
        end
    end)
end)

LeftGroupBox:AddDropdown('Dros', {Values = list, Default = 1, Multi = false, Text = 'Feedable Foods', Tooltip = ''})
Options.Dros:OnChanged(function(String)
    Num = Options.Dros.Value
end)
LeftGroupBox2:AddToggle('Ffd', {Text = 'Auto Grow', Default = false,Tooltip = ''})
Toggles.Ffd:OnChanged(function(State)
AutoGrow = Toggles.Ffd.Value
    spawn(function()
        while AutoGrow do wait()
            if AutoGrow then
                pcall(function()
                    for i, v in pairs(Player.Character.Dragons:GetDescendants()) do
                        if v.ClassName == "Model" and v:FindFirstChild("ID") then wait(5)
                            RF("GrowDragonRemote"):InvokeServer(tostring(v.Name))
                        end
                    end
                end)
            end
        end
    end)
end)
LeftGroupBox2:AddToggle('Ffdd', {Text = 'Auto Heal', Default = false,Tooltip = ''})
Toggles.Ffdd:OnChanged(function(State)
AutoHeal = Toggles.Ffdd.Value
    spawn(function()
        while AutoHeal do wait(0.1)
            if AutoHeal then
                pcall(function()
                    for i, v in pairs(Player.Character.Dragons:GetChildren()) do
                        if v.ClassName == "Model" and v:FindFirstChild("ID") then wait(1)
                            RF("HealDragonRemote"):InvokeServer(tostring(v.Name),HealingItem)
                        end
                    end
                end)
            end
        end
    end)
end)
LeftGroupBox2:AddDropdown('Dross', {Values = Healing, Default = 1, Multi = false, Text = 'Useable Healing Items', Tooltip = ''})
Options.Dross:OnChanged(function(String)
    HealingItem = Options.Dross.Value
end)

LeftGroupBox2:AddButton('Teleport to Selected World', function()
    for i,v in pairs(Poop) do
        if string.find(Type,v.GameId) then
            RF("WorldTeleportRemote"):InvokeServer(v.GameId,{})
        end 
    end 
end)
 
LeftGroupBox2:AddDropdown('2222', {Values = Worlds, Default = 1, Multi = false, Text = 'Useable Healing Items', Tooltip = ''})
Options.s222:OnChanged(function(String)
    Type = Options.s222.Value
end)
local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/Karrot-Esp"))()
LeftGroupBox2:AddToggle('ESP1', {Text = 'Esp Toggle', Default = false,Tooltip = ''})
Toggles.ESP1:OnChanged(function(State)
ESP:Toggle(Toggles.ESP1.Value)
end)

LeftGroupBox2:AddToggle('ESP2', {Text = 'Esp Players', Default = false,Tooltip = ''})
Toggles.ESP2:OnChanged(function(State)
ESP.Players = Toggles.ESP2.Value
end)

LeftGroupBox2:AddToggle('ESP3', {Text = 'Esp Tracers', Default = false,Tooltip = ''})
Toggles.ESP3:OnChanged(function(State)
ESP.Tracers = Toggles.ESP3.Value
end)

LeftGroupBox2:AddToggle('ESP4', {Text = 'Esp Names', Default = false,Tooltip = ''})
Toggles.ESP4:OnChanged(function(State)
ESP.EspNames = Toggles.ESP4.Value
end)

LeftGroupBox2:AddToggle('ESP5', {Text = 'Esp Boxes', Default = false,Tooltip = ''})
Toggles.ESP5:OnChanged(function(State)
ESP.Boxes = Toggles.ESP5.Value
end)


LeftGroupBox2:AddToggle('SSS1', {Text = 'Player Loop WalkSpeed/JumpPower', Default =  Toggle,Tooltip = 'This is a tooltip'})
Toggles.SSS1:OnChanged(function(State)
    Toggle = State 
    Toggles.SSS1.Value = Toggle
    Stepped:Connect(function()
        pcall(function()
            if Toggle then
                Player.Character:FindFirstChildWhichIsA("Humanoid").WalkSpeed = WalkSpeed
                Player.Character:FindFirstChildWhichIsA("Humanoid").JumpPower = JumpPower
            end 
        end)
    end)
end)

LeftGroupBox2:AddInput('SSF2', {Default = 'WalkSpeed',Numeric = true,Finished = false,Text = 'WalkSpeed',Tooltip = 'Numbers Only',Placeholder = 'WalkSpeed',})
Options.SSF2:OnChanged(function(State)
    WalkSpeed = State
    Options.SSF2.Value = WalkSpeed
end)

LeftGroupBox2:AddInput('SSF3', {Default = 'JumpPower',Numeric = true,Finished = false,Text = 'JumpPower',Tooltip = 'Numbers Only',Placeholder = 'JumpPower',})

Options.SSF3:OnChanged(function(State)
    JumpPower = State
    Options.SSF3.Value = JumpPower
end)

LeftGroupBox2:AddToggle('SSS4', {Text = 'Infinite Jump',Default =  InfiniteJump,Tooltip = 'This is a tooltip', 
})

Toggles.SSS4:OnChanged(function(State)
InfiniteJump = State
Toggles.SSS4.Value = InfiniteJump
UserInputService.JumpRequest:connect(
    function()
        if InfiniteJump then
            Player.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState("Jumping")
        end
    end
)
end)

LeftGroupBox2:AddToggle('SSS5', {Text = 'N NoClip',Default =  Sex2,Tooltip = 'This is a tooltip'})
Toggles.SSS5:OnChanged(function(State)
    Sex2 = State
    Toggles.SSS5.Value = Sex2
    RunService.Stepped:connect(function(v)
        if noclips then
            pcall(function()
                NoClip2(Player.Character)
            end)
        end
    end)
end)

LeftGroupBox2:AddToggle('SSS6', {Text = 'H Fly',Default =  Sex,Tooltip = 'Fly By Pressing H'})
Toggles.SSS6:OnChanged(function(State)
Sex = State
Toggles.SSS6.Value = Sex
local Max = 0
local LP = Players.LocalPlayer
local Mouse = LP:GetMouse()
Mouse.KeyDown:connect(
    function(k)
        if k:lower() == "h" and Sex then
            Max = Max + 1
            getgenv().Fly = false
            if Sex then
                local T = LP.Character:FindFirstChild("UpperTorso",true) or LP.Character:FindFirstChild("HumanoidRootPart",true)
                local S = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0
                }
                local S2 = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0
                }
                local SPEED = 5
                local function FLY()
                    getgenv().Fly = true
                    local BodyGyro = Instance.new("BodyGyro", T)
                    local BodyVelocity = Instance.new("BodyVelocity", T)
                    BodyGyro.P = 9e4
                    BodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                    BodyGyro.cframe = T.CFrame
                    BodyVelocity.velocity = Vector3.new(0, 0, 0)
                    BodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)
                    spawn(
                        function()
                            repeat
                                wait()
                                LP.Character.Humanoid.PlatformStand = true
                                if S.L + S.R ~= 0 or S.F + S.B ~= 0 then
                                    SPEED = 500
                                elseif not (S.L + S.R ~= 0 or S.F + S.B ~= 0) and SPEED ~= 0 then
                                    SPEED = 0
                                end
                                if (S.L + S.R) ~= 0 or (S.F + S.B) ~= 0 then
                                    BodyVelocity.velocity =
                                        ((Workspace.CurrentCamera.CoordinateFrame.lookVector * (S.F + S.B)) +
                                        ((Workspace.CurrentCamera.CoordinateFrame *
                                            CFrame.new(S.L + S.R, (S.F + S.B) * 0.2, 0).p) -
                                            Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        SPEED
                                    S2 = {
                                        F = S.F,
                                        B = S.B,
                                        L = S.L,
                                        R = S.R
                                    }
                                elseif (S.L + S.R) == 0 and (S.F + S.B) == 0 and SPEED ~= 0 then
                                    BodyVelocity.velocity =
                                        ((Workspace.CurrentCamera.CoordinateFrame.lookVector * (S2.F + S2.B)) +
                                        ((Workspace.CurrentCamera.CoordinateFrame *
                                            CFrame.new(S2.L + S2.R, (S2.F + S2.B) * 0.2, 0).p) -
                                            Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        SPEED
                                else
                                    BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
                                end
                                BodyGyro.cframe = Workspace.CurrentCamera.CoordinateFrame
                            until not getgenv().Fly
                            S = {
                                F = 0,
                                B = 0,
                                L = 0,
                                R = 0
                            }
                            S2 = {
                                F = 0,
                                B = 0,
                                L = 0,
                                R = 0
                            }
                            SPEED = 0
                            BodyGyro:destroy()
                            BodyVelocity:destroy()
                            LP.Character.Humanoid.PlatformStand = false
                        end
                    )
                end
                Mouse.KeyDown:connect(
                    function(k)
                        if k:lower() == "w" then
                            S.F = 1
                        elseif k:lower() == "s" then
                            S.B = -1
                        elseif k:lower() == "a" then
                            S.L = -1
                        elseif k:lower() == "d" then
                            S.R = 1
                        end
                    end
                )
                Mouse.KeyUp:connect(
                    function(k)
                        if k:lower() == "w" then
                            S.F = 0
                        elseif k:lower() == "s" then
                            S.B = 0
                        elseif k:lower() == "a" then
                            S.L = 0
                        elseif k:lower() == "d" then
                            S.R = 0
                        end
                    end
                )
                FLY()
                if Max == 2 then
                    getgenv().Fly = false
                    Max = 0
                end
            end
        end
    end
)
end)

LeftGroupBox2:AddButton('FPS Booster', function()
    for i,v in pairs(game:GetDescendants()) do 
        if v:IsA("Texture") then
            v.Texture = ""
        elseif v:IsA("BasePart") then
            v.Material = Enum.Material.Wood
        end 
    end 
end)

LeftGroupBox2:AddButton('ServerHop', function() ServerHop() end)
LeftGroupBox2:AddButton('Rejoin', function() 
    local Success, ErrorMessage = pcall(function()
        Rejoin()
    end)
    if ErrorMessage and not Success then
        warn(ErrorMessage)
    elseif Success and not ErrorMessage then
        print(Success)
    end
end)

-- I set NoUI so it does not show up in the keybinds menu
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = "RightControl", NoUI = true, Text = 'Menu keybind' }) 

Library.ToggleKeybind = Options.MenuKeybind 
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

SaveManager:IgnoreThemeSettings() 
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 
ThemeManager:SetFolder('V.G Hub')
SaveManager:SetFolder("V.G Hub/" .. game.PlaceId)
SaveManager:BuildConfigSection(Tabs['UI Settings']) 
ThemeManager:ApplyToTab(Tabs['UI Settings'])
